[2018-04-05 16:54:01,736] [    INFO] <<MainThread>>::(EnvVar.py[21].print_edgeenv                 :    <<< --- logger ENVIRONMENT VARIABLES --- >>>
[2018-04-05 16:54:01,736] [    INFO] <<MainThread>>::(EnvVar.py[24].print_edgeenv                 :   <EV> >> LOG_BACKUP_COUNT = [10]
[2018-04-05 16:54:01,736] [    INFO] <<MainThread>>::(EnvVar.py[24].print_edgeenv                 :   <EV> >> LOG_FILESIZE_KB = [256]
[2018-04-05 16:54:01,737] [    INFO] <<MainThread>>::(EnvVar.py[24].print_edgeenv                 :   <EV> >> LOG_LEVEL = [DEBUG]
[2018-04-05 16:54:01,738] [    INFO] <<MainThread>>::(EnvVar.py[25].print_edgeenv                 :    <<<  ---------EV----------  >>>
[2018-04-05 16:54:01,738] [    INFO] <<MainThread>>::(EdgeLogger.py[80].get_edgelogger                :  ** EDGE LOGGER ** backupcnt=10, logbytesize=262144, loglevel=DEBUG
[2018-04-05 16:54:01,740] [    INFO] <<MainThread>>::(test_unit_influx.py[125].test_influxdb_collect_all_metrics:  -- UNIT TEST for test_influxdb_collect_all_metrics -- 
[2018-04-05 16:54:01,741] [    INFO] <<MainThread>>::(EnvVar.py[21].print_edgeenv                 :    <<< --- ContainerLogReadClient (Influx) Params  ENVIRONMENT VARIABLES --- >>>
[2018-04-05 16:54:01,741] [    INFO] <<MainThread>>::(EnvVar.py[24].print_edgeenv                 :   <EV> >> INFLUX_DB_READ_HOST = [influxdb_aes]
[2018-04-05 16:54:01,742] [    INFO] <<MainThread>>::(EnvVar.py[24].print_edgeenv                 :   <EV> >> INFLUX_DB_PORT = [8086]
[2018-04-05 16:54:01,742] [    INFO] <<MainThread>>::(EnvVar.py[24].print_edgeenv                 :   <EV> >> INFLUX_DB_READ_HOST_POLICY = [24hours]
[2018-04-05 16:54:01,742] [    INFO] <<MainThread>>::(EnvVar.py[25].print_edgeenv                 :    <<<  ---------EV----------  >>>
[2018-04-05 16:54:02,163] [   DEBUG] <<MainThread>>::(influx_read.py[36].get_host                      :  Host list for debug: [{'key': 'host', 'value': 'lsiot-Win10Ent-Yu'}]
[2018-04-05 16:54:02,164] [   DEBUG] <<MainThread>>::(influx_read.py[39].get_host                      :  Actual host = {'host': 'lsiot-Win10Ent-Yu'}
[2018-04-05 16:54:02,166] [    INFO] <<MainThread>>::(EnvVar.py[21].print_edgeenv                 :    <<< --- Docker Client Params  ENVIRONMENT VARIABLES --- >>>
[2018-04-05 16:54:02,168] [    INFO] <<MainThread>>::(EnvVar.py[24].print_edgeenv                 :   <EV> >> DC_BASE_URL = [tcp://172.22.240.1:2376]
[2018-04-05 16:54:02,169] [    INFO] <<MainThread>>::(EnvVar.py[24].print_edgeenv                 :   <EV> >> DC_CERT_DIR = [C:\Users\lsiot\Desktop\adapt-git\adapt_edge\\dockerd_tls_secure\\dockerCerts]
[2018-04-05 16:54:02,172] [    INFO] <<MainThread>>::(EnvVar.py[25].print_edgeenv                 :    <<<  ---------EV----------  >>>
[2018-04-05 16:54:02,173] [    INFO] <<MainThread>>::(DockerUtils.py[47].get_docker_client             :  Connected to host machine docker daemon!
[2018-04-05 16:54:02,175] [    INFO] <<MainThread>>::(influx_read.py[271].read_all_metrics              :  ** READING ALL METRICS FROM Influx! **
[2018-04-05 16:54:02,214] [   DEBUG] <<MainThread>>::(influx_read.py[168].read_network                  :  db query message_size = 15688byte
[2018-04-05 16:54:02,216] [   DEBUG] <<MainThread>>::(influx_read.py[169].read_network                  :  Net-List: [{'time': '2018-04-05T17:04:00Z', 'm1': 0.0809081875, 'm2': 0.06224971484375}, {'time': '2018-04-05T17:04:10Z', 'm1': 0.0784585, 'm2': 0.201849828125}, {'time': '2018-04-05T17:04:20Z', 'm1': 0.04357601171875, 'm2': 0.40875609375}]
[2018-04-05 16:54:02,244] [   DEBUG] <<MainThread>>::(influx_read.py[176].read_network                  :  read_network, serialize to string perf time: 0
[2018-04-05 16:54:02,246] [   DEBUG] <<MainThread>>::(influx_read.py[177].read_network                  :  protobuf message_size = 100797byte
[2018-04-05 16:54:02,251] [   DEBUG] <<MainThread>>::(influx_read.py[73].read_container_net            :  Container name list: [{'key': 'container_name', 'value': 'influxdb_aes'}, {'key': 'container_name', 'value': 'rmq'}]
[2018-04-05 16:54:02,378] [   DEBUG] <<MainThread>>::(influx_read.py[88].read_container_net            :  db query message_size = 240byte
[2018-04-05 16:54:02,378] [   DEBUG] <<MainThread>>::(influx_read.py[89].read_container_net            :  influxdb_aes [{'time': '2018-04-05T17:04:10Z', 'm1': 0, 'm2': 0}, {'time': '2018-04-05T17:04:20Z', 'm1': 0, 'm2': 0}, {'time': '2018-04-05T17:04:30Z', 'm1': 0, 'm2': 0}]
[2018-04-05 16:54:02,554] [   DEBUG] <<MainThread>>::(influx_read.py[88].read_container_net            :  db query message_size = 240byte
[2018-04-05 16:54:02,554] [   DEBUG] <<MainThread>>::(influx_read.py[89].read_container_net            :  rmq [{'time': '2018-04-05T17:04:10Z', 'm1': 0, 'm2': 0}, {'time': '2018-04-05T17:04:20Z', 'm1': 0, 'm2': 0}, {'time': '2018-04-05T17:04:30Z', 'm1': 0, 'm2': 0}]
[2018-04-05 16:54:02,569] [   DEBUG] <<MainThread>>::(influx_read.py[101].read_container_mem            :  Container name list: [{'key': 'container_name', 'value': 'influxdb_aes'}, {'key': 'container_name', 'value': 'rmq'}]
[2018-04-05 16:54:02,625] [   DEBUG] <<MainThread>>::(influx_read.py[117].read_container_mem            :  db query message_size = 240byte
[2018-04-05 16:54:02,626] [   DEBUG] <<MainThread>>::(influx_read.py[118].read_container_mem            :  influxdb_aes [{'time': '2018-04-05T17:04:00Z', 'm1': 1.0138053894042969}, {'time': '2018-04-05T17:04:10Z', 'm1': 1.0138053894042969}, {'time': '2018-04-05T17:04:20Z', 'm1': 1.0138053894042969}]
[2018-04-05 16:54:02,686] [   DEBUG] <<MainThread>>::(influx_read.py[117].read_container_mem            :  db query message_size = 240byte
[2018-04-05 16:54:02,686] [   DEBUG] <<MainThread>>::(influx_read.py[118].read_container_mem            :  rmq [{'time': '2018-04-05T17:04:00Z', 'm1': 1.014007568359375}, {'time': '2018-04-05T17:04:10Z', 'm1': 1.014007568359375}, {'time': '2018-04-05T17:04:20Z', 'm1': 1.014007568359375}]
[2018-04-05 16:54:02,697] [   DEBUG] <<MainThread>>::(influx_read.py[131].read_container_cpu            :  Container name list: [{'key': 'container_name', 'value': 'influxdb_aes'}, {'key': 'container_name', 'value': 'rmq'}]
[2018-04-05 16:54:02,756] [   DEBUG] <<MainThread>>::(influx_read.py[148].read_container_cpu            :  db query message_size = 240byte
[2018-04-05 16:54:02,757] [   DEBUG] <<MainThread>>::(influx_read.py[149].read_container_cpu            :  influxdb_aes [{'time': '2018-04-05T17:04:00Z', 'm1': 0.12997539410876333}, {'time': '2018-04-05T17:04:10Z', 'm1': 0.10764525694203579}, {'time': '2018-04-05T17:04:20Z', 'm1': 0.097912520496039}]
[2018-04-05 16:54:02,851] [   DEBUG] <<MainThread>>::(influx_read.py[148].read_container_cpu            :  db query message_size = 240byte
[2018-04-05 16:54:02,852] [   DEBUG] <<MainThread>>::(influx_read.py[149].read_container_cpu            :  rmq [{'time': '2018-04-05T17:04:00Z', 'm1': 0.15467414242711314}, {'time': '2018-04-05T17:04:10Z', 'm1': 0.14696385418833371}, {'time': '2018-04-05T17:04:20Z', 'm1': 2.6388869551176652}]
[2018-04-05 16:54:02,883] [   DEBUG] <<MainThread>>::(influx_read.py[235].read_disk_percent             :  db query message_size = 15688byte
[2018-04-05 16:54:02,884] [   DEBUG] <<MainThread>>::(influx_read.py[236].read_disk_percent             :  [{'time': '2018-04-05T17:04:00Z', 'm1': 41.05821418762207}, {'time': '2018-04-05T17:04:10Z', 'm1': 41.05821418762207}, {'time': '2018-04-05T17:04:20Z', 'm1': 41.05821418762207}]
[2018-04-05 16:54:02,889] [   DEBUG] <<MainThread>>::(influx_read.py[243].read_disk_percent             :  read_disk_percent, serialize to string perf time: 0
[2018-04-05 16:54:02,889] [   DEBUG] <<MainThread>>::(influx_read.py[245].read_disk_percent             :  protobuf message_size = 50518byte
[2018-04-05 16:54:02,914] [   DEBUG] <<MainThread>>::(influx_read.py[189].read_memory                   :  db query message_size = 15688byte
[2018-04-05 16:54:02,914] [   DEBUG] <<MainThread>>::(influx_read.py[190].read_memory                   :  [{'time': '2018-04-05T17:04:00Z', 'm1': 8.973548889160156}, {'time': '2018-04-05T17:04:10Z', 'm1': 8.99020767211914}, {'time': '2018-04-05T17:04:20Z', 'm1': 8.958545684814453}]
[2018-04-05 16:54:02,919] [   DEBUG] <<MainThread>>::(influx_read.py[197].read_memory                   :  read_memory, serialize to string perf time: 0
[2018-04-05 16:54:02,920] [   DEBUG] <<MainThread>>::(influx_read.py[199].read_memory                   :  protobuf message_size = 50517byte
[2018-04-05 16:54:02,946] [   DEBUG] <<MainThread>>::(influx_read.py[257].read_cpu                      :  db query message_size = 15688byte
[2018-04-05 16:54:02,946] [   DEBUG] <<MainThread>>::(influx_read.py[258].read_cpu                      :  [{'time': '2018-04-05T17:04:00Z', 'm1': 0.9766533970832825}, {'time': '2018-04-05T17:04:10Z', 'm1': 2.4606940746307373}, {'time': '2018-04-05T17:04:20Z', 'm1': 3.7668373584747314}]
[2018-04-05 16:54:02,951] [   DEBUG] <<MainThread>>::(influx_read.py[265].read_cpu                      :  read_cpu, serialize to string perf time: 0
[2018-04-05 16:54:02,952] [   DEBUG] <<MainThread>>::(influx_read.py[267].read_cpu                      :  protobuf message_size = 50517byte
[2018-04-05 16:54:02,983] [   DEBUG] <<MainThread>>::(influx_read.py[212].read_disk_io                  :  db query message_size = 15688byte
[2018-04-05 16:54:02,984] [   DEBUG] <<MainThread>>::(influx_read.py[213].read_disk_io                  :  [{'time': '2018-04-05T17:04:00Z', 'm1': 0.232727328125, 'm2': 0.63330425}, {'time': '2018-04-05T17:04:10Z', 'm1': 0.0032763056640625, 'm2': 0.1130327109375}, {'time': '2018-04-05T17:04:20Z', 'm1': 0, 'm2': 0.194836984375}]
[2018-04-05 16:54:02,992] [   DEBUG] <<MainThread>>::(influx_read.py[220].read_disk_io                  :  read_disk_io, serialize to string perf time: 0
[2018-04-05 16:54:02,993] [   DEBUG] <<MainThread>>::(influx_read.py[222].read_disk_io                  :  protobuf message_size = 93075byte
[2018-04-05 16:54:02,994] [    INFO] <<MainThread>>::(influx_read.py[281].read_all_metrics              :  Reading metrics complete! Metric list length: 11
[2018-04-05 16:54:02,995] [    INFO] <<MainThread>>::(test_unit_influx.py[132].test_influxdb_collect_all_metrics:  Test Passed
